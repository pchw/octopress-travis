<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: RubyMotion | ぽっちぽちにしてやんよ]]></title>
  <link href="http://pchw.github.com/blog/categories/rubymotion/atom.xml" rel="self"/>
  <link href="http://pchw.github.com/"/>
  <updated>2012-06-06T13:10:03+09:00</updated>
  <id>http://pchw.github.com/</id>
  <author>
    <name><![CDATA[pchw]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[[RubyMotion] Bundlerを使って楽をしてみた！]]></title>
    <link href="http://pchw.github.com/blog/2012/06/06/bundler/"/>
    <updated>2012-06-06T08:53:00+09:00</updated>
    <id>http://pchw.github.com/blog/2012/06/06/bundler</id>
    <content type="html"><![CDATA[<p>昨日<a href="http://thunderboltlabs.com/posts/using-bundler-with-rubymotion">Using Bundler With Rubymotion</a>という記事が投稿されて，話題になっていたので早速ためしてみた．</p>

<p>記事の内容的には，色々<code>require</code>したり<code>gem install</code>したりするのめんどくさいよね！それ<code>bundle</code>使えばできるよ！てな感じでした．</p>

<h2>やってみよう！</h2>

<p>何はともあれ，bundlerを入れます．</p>

<pre><code>$ gem install bundler
</code></pre>

<p><code>Rakefile</code>の<code>require 'motion/project'</code>の下辺りに</p>

<pre><code>require 'bundler'
Bundler.require
</code></pre>

<p>を追加しておきます．</p>

<p>あとは，Gemfileを作成して</p>

<pre><code>$ cat &gt; Gemfile
source :rubygems

gem "rake"
gem "motion-testflight"
</code></pre>

<p>とかして保存しておきます．あとは，</p>

<pre><code>$ bundle install
</code></pre>

<p>と実行すれば，自動的にgemを入れてくれます．</p>

<pre><code>$ rake testflight
</code></pre>

<p>とか打てば，<code>Rakefile</code>に<code>require 'motion-testflight'</code> とか書かなくてもOKです！</p>

<h2>罠</h2>

<p>上記のは<code>motion-testflight</code>でやっているのは訳があって，
<code>motion-testflight</code>は実は<code>gem install</code>だけでは完結していなくて，
TestFlight SDKをダウンロードして<code>vendor/testflight</code>に入れないとダメなんですねー．残念です．</p>

<p>ここらへんどうすればいいんだろう，，，？僕はRuby畑の人ではないので，どうすればいいのかよく分からないです．Gemfileにダウンロードするスクリプトとか書けばいいの？（書けるの？）</p>

<h2>One more thing</h2>

<p>んで，そのbundleの記事に反応していた中で</p>

<blockquote class="twitter-tweet tw-align-left" width="350" lang="ja"><p>せっかく使うんだったら bundle install --path vendor/bundle とかにして、システムにgemを入れないようにした方がいいかも？</p>&mdash; Satoshi Ebisawaさん (@satococoa) <a href="https://twitter.com/satococoa/status/209836315833925635" data-datetime="2012-06-05T02:37:30+00:00">6月 5, 2012</a></blockquote>


<script src="http://pchw.github.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>という意見がありましたので，やってみました．</p>

<pre><code>$ bundle install --path vendor/bundle
</code></pre>

<p>とやると，<code>vendor/bundle</code>以下に<code>ruby/&lt;version&gt;/gems</code>やらなんやら色んなファイルが出来てました．</p>

<p>これでシステムグローバルに入れるのではなくて，そのProject内にgemsをインストールしているわけですね．</p>

<p>その後は，いつもどおり<code>rake</code>でいいのかな？と思ったのですが，</p>

<pre><code>$ rake
Could not find rake-0.9.2.2 in any of the sources
Run `bundle install` to install missing gems.
</code></pre>

<p>とかいう警告が出てました．
しかし，rake自体は成功している模様．よく分からない．</p>

<pre><code>$ bundle exec rake
</code></pre>

<p>とやる必要があるのかな？と思ったのですが，同じメッセージが出てました．
ここらへんはbundler詳しくないのでよく分からない，，，</p>

<p>何か分かったら教えて頂けるとありがたいです！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[RubyMotion] Simulatorでは動くのに実機で動かなくてハマった話]]></title>
    <link href="http://pchw.github.com/blog/2012/06/05/casesensitive/"/>
    <updated>2012-06-05T23:29:00+09:00</updated>
    <id>http://pchw.github.com/blog/2012/06/05/casesensitive</id>
    <content type="html"><![CDATA[<h2>はじめに</h2>

<p>アプリを作ってた時に，Simulatorでは動くのに<code>rade device</code>や<code>rake testflight</code>して実機で動かしたときに起動した瞬間落ちるという現象が起こって困った話です．</p>

<h2>RubyMotionは実機でのデバッグに弱い！</h2>

<p>実機を繋ぐのはめんどくさいので，基本はSimulatorで開発してるのですが，さぁ実機でうごかすかーとなったときに何故か即死して困りました．</p>

<p>RubyMotionは<code>rake</code>したときにSimulatorが自動的に立ち上がってインタラクティブシェルで色々出来るという利点があるのですが，これは実機では出来ません．（よね？）</p>

<p>なので，どうしてもSimulatorがメインになってしまう気がします．</p>

<p>今回実機で動かして落ちるとかいうことでハマったわけですが，結果的には実機で動かしてXCodeのOrganizerのConsoleからログを見て原因調査をしました．
それ以外で実機オンリーのバグ調査はどうやるんでしょうか，，，XCodeだと実機で繋いでブレイクポイントとか貼れると思うのですが，RubyMotionだと方法がない，，，</p>

<h2>今回のケース</h2>

<p>さて，今回はどういう原因で落ちていたかです．</p>

<p>こういうSourceでした．</p>

<pre><code>class AppDelegate
  def application(application, didFinishLaunchingWithOptions:launchOptions)
    @window = UIWindow.alloc.initWithFrame UIScreen.mainScreen.bounds
    @storyboard = UIStoryboard.storyboardWithName(
        "StoryBoard", 
        bundle: nil)
    @window.rootViewController = @storyboard.instantiateViewControllerWithIdentifier "NavigationController"

    @window.makeKeyAndVisible
    true
  end
end
</code></pre>

<p>リソースは <code>Storyboard.storyboard</code>です．</p>

<pre><code>    @storyboard = UIStoryboard.storyboardWithName(
        "StoryBoard", 
        bundle: nil)
</code></pre>

<p>この部分で指定しているStoryboard名の大文字小文字が間違っているからですね．（正しくは<code>"Storyboard"</code>）
Simulatorでは何故か動くのですが，実機ではStoryboardが見つからないというログを吐いて落ちます．</p>

<h2>まとめ</h2>

<p>RubyMotionを使っていると，どうしてもSimulator頼りの開発になりがちですが，あまりに実機で確認しないと最終フェーズで痛いことになるっていう話でした！</p>

<p>TwitterをRubyMotion検索で張ってるのですが，Twitter上でもTypoで動かなくて困ったぜみたいな話とか見ましたし，実行時評価も色々と大変ですね．
MethodとかPropertyなら静的解析とかでなんとかなりそうですが，今回みたいに文字列部分に関するところだとどうしても発見出来ない気がする，，，</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion のlib部分がソース公開してるのでPullRequestを送ってみたよ！]]></title>
    <link href="http://pchw.github.com/blog/2012/06/02/pullreq/"/>
    <updated>2012-06-02T12:41:00+09:00</updated>
    <id>http://pchw.github.com/blog/2012/06/02/pullreq</id>
    <content type="html"><![CDATA[<p>RubyMotionのlib部分のソースが公開されてます．</p>

<p>lib部分にはbuildsystemやRakefileとかvendor周りのあれこれが含まれていて，
最近のfixがその辺りの修正が多かったので，広くpull requestを受け付けようということですかね．</p>

<p>早速前の記事(<a href="http://pchw.github.com/blog/2012/06/02/certificate/">[RubyMotion] 証明書の名前に日本語が入っていた時にrake device出来ない問題の解決策</a>)の解決策なんかは，<code>motion create</code>で生成されるRakefileの修正でいけるのでパパッとPull Requestを送って本家に組み込んでもらうのがいいです．</p>

<p>というわけで，Pull Requestを<a href="https://github.com/HipByte/RubyMotion/pull/1">送っておきました</a>．
なんと<code>pull/1</code>で1番目のpullらしい．</p>

<p>本家に組み込まれるまで，ローカル環境を同じように修正するには，
<code>/Library/RubyMotion/lib/motion/project/app.rb</code>を修正します．</p>

<p>修正内容は<a href="https://github.com/HipByte/RubyMotion/pull/1/files">Pull Requestの詳細</a>をみて分かると思いますけど，102行目に</p>

<pre><code># -*- coding: utf-8 -*-
</code></pre>

<p>を追加するだけです．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[RubyMotion] 証明書の名前に日本語が入っていた時にrake device出来ない問題の解決策]]></title>
    <link href="http://pchw.github.com/blog/2012/06/02/certificate/"/>
    <updated>2012-06-02T12:10:00+09:00</updated>
    <id>http://pchw.github.com/blog/2012/06/02/certificate</id>
    <content type="html"><![CDATA[<p>RubyMotionを色々いじって記事書いてたのですが，全然実機で試してませんでした．</p>

<p>BT周りの実装をしてて，ついにシミュレータで確認ができなくなったので，実機に転送しようとして<code>rake device</code>したら</p>

<pre><code>"iPhone Developper: &lt;your escaped name&gt; : no identity found
rake aborted!
Command failed with status (1): [CODESIGN_ALLOCATE="/Developer/Platforms/iP...]
</code></pre>

<p>とか出やがりました．</p>

<p>マルチバイト文字を何かエスケープして<code>\123\456</code>みたいな形式にしてくれて，codesignに渡してしまうので，codesign側がそんなidentifyがねえよと言ってるわけですね．</p>

<p><a href="http://www.rubymotion.com/developer-center/guides/project-management/#_configuration">RubyMotion Project Management Guide#2.Configuration</a>
によれば，</p>

<pre><code>codesign_certificate
The name of the certificate to use for codesigning, as a String. The default value is the first iPhone Developer certificate found in keychain. Example: "iPhone Developer: Darth Vader (A3LKZY369Q)".
</code></pre>

<p>とあるので，Rakefileに指定すればいいかなーとか思って</p>

<pre><code>$:.unshift("/Library/RubyMotion/lib")
require 'motion/project'

Motion::Project::App.setup do |app|
  # Use `rake config' to see complete project settings.
  app.name = 'hoge'
  app.codesign_certificate = "iPhone Developer: &lt;your name&gt;" # added
end
</code></pre>

<p>こんな感じで，<code>app.codesign_certificate</code>を追加したらですね，</p>

<pre><code>rake aborted!
Rakefile:9: invalid multibyte char (US-ASCII)
Rakefile:9: invalid multibyte char (US-ASCII)
Rakefile:9: syntax error, unexpected $end, expecting keyword_end
</code></pre>

<p>こういうエラーが出て，もしかしてRakefileにマルチバイト文字は指定出来ないのか，，，ピンチ！</p>

<pre><code>$ file Rakefile
Rakefile: UTF-8 Unicode text
</code></pre>

<p>ちゃんとUTF8だよな，，，</p>

<h2>解決策</h2>

<p>と，まぁ色々悩んだんですが，結局解決策は</p>

<pre><code># -*- coding: utf-8 -*-
$:.unshift("/Library/RubyMotion/lib")
require 'motion/project'

Motion::Project::App.setup do |app|
  # Use `rake config' to see complete project settings.
  app.name = 'hoge'
  app.codesign_certificate = "iPhone Developer: &lt;your name&gt;"
end
</code></pre>

<p>これが正解です．</p>

<p><code># -*- coding: utf-8 -*-</code> を追加すればいいだけでした．</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyMotion 1.9が出てた！早い！]]></title>
    <link href="http://pchw.github.com/blog/2012/06/01/19/"/>
    <updated>2012-06-01T12:29:00+09:00</updated>
    <id>http://pchw.github.com/blog/2012/06/01/19</id>
    <content type="html"><![CDATA[<p>一昨日ぐらいに1.8が出たと思ったら，もう1.9が出てきました．</p>

<p>しかも変更点が多い．</p>

<p>次は2.0なのか1.10なのか気になりますね！</p>

<pre><code>= RubyMotion 1.9 =

  * Fixed a bug in the build system where the paths of vendored libraries
    would not be properly quoted and cause a build failure in case they
    contain space characters.
  * Fixed a bug in the build system where using a lower deployment_target
    version would cause a link error at runtime because the application was
    linking against a framework that does not exist (ex. CoreImage on 4.3).
  * Fixed the `rake spec' task to not move the simulator window to the
    foreground.
  * Fixed a bug in the compiler where APIs accepting pointers to
    CoreFoundation types could not be given Pointer objects of the :object
    type (ex. CFErrorRef*).
  * Added support for CoreAudio (experimental). At the very least, constants
    pointing to four-bytes characters should be properly covered.
  * Fixed a typo in "expected array of %d elements, got %d" exception message
    where the numbers were inverted. Thanks Enrico Thierbach.
  * Fixed a bug in the compiler where compiling strings containing only null
    characters (ex. "\x00") would cause a crash.
</code></pre>

<ul>
<li>vendorライブラリのpathがQuoteで囲まれてなくてスペースが含まれてたときにビルドが失敗するのを修正</li>
<li>CoreImageを4.3で使おうとするみたいなdevelopment_targetを昔のに設定してるのに存在しないフレームワークを指定したときにリンクエラーになるビルドの問題を修正</li>
<li><code>rake spec</code>した時にシミュレータが前に出てこないのを修正</li>
<li>CFなんちゃらへのポインタをAPIに渡せない問題の修正</li>
<li>CoreAudioのサポートを追加．</li>
<li>例外メッセージのtypo修正</li>
<li>nullキャラクターだけが含まれたstringをコンパイルする時にクラッシュしてた問題を修正</li>
</ul>

]]></content>
  </entry>
  
</feed>
